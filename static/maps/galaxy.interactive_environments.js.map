{"version":3,"sources":["galaxy.interactive_environments.js"],"names":["clear_main_area","$","remove","children","display_spinner","append","galaxy_root","make_spin_state","type","ajax_timeout_init","ajax_timeout_max","ajax_timeout_step","sleep_init","ajax_timeout","console","sleep_max","sleep_step","log_attempts","count","sleep","toastr","user_msg","clear","closeButton","timeOut","extendedTimeOut","tapToDismiss","error","log","spin_state","window","setTimeout","spinner","success","bool_response","success_callback","jqxhr","error_callback","spin_again","xhrFields","withCredentials","timeout","data","status","timeout_callback","ajax_params","ajax","url","spin_until","messages","message_once","message","wrapped_success","timeout_error","spin","spin_error","append_notebook","test_ie_availability","waiting","wait_warn","load_when_ready","not_ready","unknown_response"],"mappings":"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","file":"../scripts/galaxy.interactive_environments.js","sourcesContent":["/**\n * Internal function to remove content from the main area and add the notebook.\n * Not idempotent\n * TODO: This isn't just internal, some notebooks are calling it?\n */\nexport function append_notebook(url) {\n    clear_main_area();\n    $(\"#main\").append(\n        `<iframe frameBorder=\"0\" seamless=\"seamless\" style=\"width: 100%; height: 100%; overflow:hidden;\" scrolling=\"no\" src=\"${\n            url\n        }\"></iframe>`\n    );\n}\n\nexport function clear_main_area() {\n    $(\"#spinner\").remove();\n    $(\"#main\")\n        .children()\n        .remove();\n}\n\nexport function display_spinner() {\n    $(\"#main\").append(\n        `<img id=\"spinner\" src=\"${\n            galaxy_root\n        }static/style/largespinner.gif\" style=\"position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;\">`\n    );\n}\n\n/* Create a spin_state object used by spin() and spin_again() */\nexport function make_spin_state(\n    type,\n    ajax_timeout_init,\n    ajax_timeout_max,\n    ajax_timeout_step,\n    sleep_init,\n    sleep_max,\n    sleep_step,\n    log_attempts\n) {\n    var s = {\n        type: typeof type !== \"undefined\" ? type : \"GIE spin\",\n        ajax_timeout: typeof ajax_timeout_init !== \"undefined\" ? ajax_timeout_init : 2000,\n        ajax_timeout_max: typeof ajax_timeout_max !== \"undefined\" ? ajax_timeout_max : 16000,\n        ajax_timeout_step: typeof ajax_timeout_step !== \"undefined\" ? ajax_timeout_step : 500,\n        sleep: typeof sleep_init !== \"undefined\" ? sleep_init : 500,\n        sleep_max: typeof sleep_max !== \"undefined\" ? sleep_max : 8000,\n        sleep_step: typeof sleep_step !== \"undefined\" ? sleep_step : 100,\n        log_attempts: typeof log_attempts !== \"undefined\" ? log_attempts : true,\n        count: 0\n    };\n    return s;\n}\n\n/* Log/display an error when spinning fails. */\nexport function spin_error(console_msg, user_msg, clear) {\n    console.log(console_msg);\n    if (clear) clear_main_area();\n    if (typeof user_msg == \"string\") {\n        toastr.clear();\n        toastr.error(user_msg, \"Error\", {\n            closeButton: true,\n            timeOut: 0,\n            extendedTimeOut: 0,\n            tapToDismiss: false\n        });\n    }\n}\n\n/* Increase sleep time and spin again. */\nfunction spin_again(spin_state) {\n    if (spin_state.sleep < spin_state.sleep_max) {\n        spin_state.sleep += spin_state.sleep_step;\n    }\n    if (spin_state.log_attempts) {\n        console.log(\n            `${spin_state.type} request ${spin_state.count} request timeout ${\n                spin_state.ajax_timeout\n            }ms sleeping ${spin_state.sleep / 1000}s`\n        );\n    }\n    window.setTimeout(spin_state.spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL as long as it times out, otherwise, call the provided success or error callback. If the callback\n * returns `true`, the condition is considered \"resolved\" and spinning stops. Otherwise, continue spinning, increasing\n * AJAX timeouts and/or sleep values as configured in the spin_state.\n */\nexport function spin(url, bool_response, success_callback, timeout_callback, error_callback, spin_state) {\n    var spinner = () => {\n        var ajax_params = {\n            url: url,\n            xhrFields: {\n                withCredentials: true\n            },\n            type: \"GET\",\n            timeout: spin_state.ajax_timeout,\n            success: function(data, status, jqxhr) {\n                if (!success_callback(data, status, jqxhr)) {\n                    spin_state.count++;\n                    spin_again(spin_state);\n                }\n            },\n            error: function(jqxhr, status, error) {\n                if (status == \"timeout\") {\n                    if (spin_state.ajax_timeout < spin_state.ajax_timeout_max) {\n                        spin_state.ajax_timeout += spin_state.ajax_timeout_step;\n                    }\n                    spin_state.count++;\n                    if (!timeout_callback(jqxhr, status, error)) spin_again(spin_state);\n                } else {\n                    spin_state.count++;\n                    if (!error_callback(jqxhr, status, error)) spin_again(spin_state);\n                }\n            }\n        };\n        if (bool_response) ajax_params[\"dataType\"] = \"json\";\n        $.ajax(ajax_params);\n    };\n    console.log(`Setting up new spinner for ${spin_state.type} on ${url}`);\n    spin_state.spinner = spinner;\n    window.setTimeout(spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL forever until there is an acceptable response. \n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK).\n * @param {Boolean} bool_response: If set to `true`, do not stop spinning until the response is `true`. Otherwise, stop\n *     as soon as a successful response is received.\n */\nfunction spin_until(url, bool_response, messages, success_callback, spin_state) {\n    var warn_at = 40; // ~2 mins\n    var message_once = (message, spin_state) => {\n        if (spin_state.count == 1) {\n            display_spinner();\n            toastr.info(message, null, {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n    };\n    var wrapped_success = data => {\n        if (!bool_response || (bool_response && data == true)) {\n            console.log(messages[\"success\"]);\n            clear_main_area();\n            toastr.clear();\n            success_callback();\n        } else if (bool_response && data == false) {\n            message_once(messages[\"not_ready\"], spin_state);\n            return false; // keep spinning\n        } else {\n            spin_error(`Invalid response to ${spin_state.type} request`, messages[\"invalid_response\"], true);\n        }\n        return true; // stop spinning\n    };\n    var timeout_error = (jqxhr, status, error) => {\n        message_once(messages[\"waiting\"], spin_state);\n        if (spin_state.count == warn_at) {\n            toastr.warning(messages[\"wait_warn\"], \"Warning\", {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n        return false; // keep spinning\n    };\n    spin(url, bool_response, wrapped_success, timeout_error, timeout_error, spin_state);\n}\n\n/**\n * Test availability of a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test availability of. Must return a 200 (302->200 is OK).\n * @param {String} callback: function to call once successfully connected.\n *\n */\nexport function test_ie_availability(url, success_callback) {\n    var messages = {\n        success: \"IE connection succeeded, returning\",\n        waiting: \"Interactive environment container is running, attempting to connect to the IE. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to connect to the interactive environment. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"An error was encountered while attempting to connect to the interactive environment, contact your administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE availability\");\n    spin_until(url, false, messages, success_callback, spin_state);\n}\n\n/**\n * Test a boolean (json) response from a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK) and either `true` or `false`.\n * @param {String} callback: function to call once successfully connected.\n *\n */\nexport function load_when_ready(url, success_callback) {\n    var messages = {\n        success: \"Galaxy reports IE container ready, returning\",\n        not_ready: \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        unknown_response:\n            \"Galaxy failed to launch a container in which to run this interactive environment, contact a Galaxy administrator.\",\n        waiting: \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to start a container. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"Galaxy encountered an error while attempting to determine the readiness of this interactive environment's container, contact a Galaxy administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE container readiness\");\n    spin_until(url, true, messages, success_callback, spin_state);\n}\n"]}