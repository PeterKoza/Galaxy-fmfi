{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","this","set","information","title","description","url","icon","redirect","password","submit_title","permissions","api_key","submit_icon","window","location","href","root","onclick","modal","show","custom_builds","Cancel","hide","Sign out","session_csrf_token","View","model","setElement","render","self","config","$","getJSON","data","$preferences","append","_","escape","email","addClass","message","get","status","_queryStringParsing2","default","prepend","_uiMisc2","Message","$el","use_remote_user","_addLink","enable_communication_server","has_user_tool_filters","action","$a","$row","find","empty","$table","on","attr","_templateFooter","_templateLink","nice_total_disk_usage","enable_quotas","quota"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: `api/users/${options.user_id}/information/inputs`,\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: `api/users/${options.user_id}/password/inputs`,\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description: \"Enable or disable the communication feature to chat with other users.\",\n                url: `api/users/${options.user_id}/communication/inputs`,\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: `api/users/${options.user_id}/permissions/inputs`,\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: `api/users/${options.user_id}/api_key/inputs`,\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description: \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: `api/users/${options.user_id}/toolbox_filters/inputs`,\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}user/openid_manage?cntrller=user&use_panels=True`;\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description: \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}custom_builds`;\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href = `${Galaxy.root}user/logout?session_csrf_token=${\n                                    Galaxy.session_csrf_token\n                                }`;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(`${Galaxy.root}api/users/${Galaxy.user.id}`, data => {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append($(\"<p/>\").append(`You are logged in as <strong>${_.escape(data.email)}</strong>.`))\n                .append((self.$table = $(\"<table/>\").addClass(\"ui-panel-table\")));\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new Ui.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", () => {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", `${Galaxy.root}user/${action}`);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return `<tr><td><div class=\"ui-panel-icon fa ${\n            options.icon\n        }\"></td><td><a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">${\n            options.title\n        }</a><div class=\"ui-form-info\">${options.description}</div></td></tr>`;\n    },\n\n    _templateFooter: function(options) {\n        return `<p class=\"ui-panel-footer\">You are using <strong>${\n            options.nice_total_disk_usage\n        }</strong> of disk space in this Galaxy instance. ${\n            Galaxy.config.enable_quotas ? `Your disk quota is: <strong>${options.quota}</strong>. ` : \"\"\n        }Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.</p>`;\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n"]}