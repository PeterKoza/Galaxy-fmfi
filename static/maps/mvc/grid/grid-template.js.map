{"version":3,"sources":["mvc/grid/grid-template.js"],"names":["grid","options","tmpl","embedded","this","grid_header","grid_table","info_text","global_actions","show_popup","action","i","target","label","insert","header","grid_filters","show_item_checkboxes","items","length","column","columns","visible","href","key","extra","body","num_rows_rendered","item","current_item_id","encode_id","id","encoded_id","j","column_settings","nowrap","link","value","column_config","cls","replace","attach_popup","label_id_prefix","footer","page_link_range","min_page","num_pages","num_page_links","cur_page_num","max_page","min_offset","max_offset","max_range","page_index","operation","operations","allow_multiple","legend","found_global","status","global_operation","default_filter_dict","filters","advanced_search_display","show_advanced_search_link","indexOf","standard_search_display","_","escape","grid_column_filter","filterable","column_key","d_key","f_key","column_label","filter_value","is_text","column_filter","jQuery","type","toLowerCase","url","params","temp_column","JSON","stringify","cf","categorical_filters","filter","cf_key","slice","filter_element","size","seperator","cf_label","cf_arg","filter_key","_utils2","default","sanitize"],"mappings":"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","file":"../../../scripts/mvc/grid/grid-template.js","sourcesContent":["// dependencies\nimport Utils from \"utils/utils\";\n// grid view templates\nexport default {\n    // template\n    grid: function(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl = `<div class=\"loading-elt-overlay\"></div><table><tr><td width=\"75%\">${this.grid_header(\n                options\n            )}</td><td></td><td></td></tr><tr><td width=\"100%\" id=\"grid-message\" valign=\"top\"></td><td></td><td></td></tr></table>${this.grid_table(\n                options\n            )}`;\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl += `<br><div class=\"toolParamHelp\" style=\"clear: both;\">${options.info_text}</div>`;\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function(options) {\n        return (\n            '<form method=\"post\" onsubmit=\"return false;\">' +\n            '<table id=\"grid-table\" class=\"grid\">' +\n            '<thead id=\"grid-table-header\"></thead>' +\n            '<tbody id=\"grid-table-body\"></tbody>' +\n            '<tfoot id=\"grid-table-footer\"></tfoot>' +\n            \"</table>\" +\n            \"</form>\"\n        );\n    },\n\n    // template\n    grid_header: function(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += `<h2>${options.title}</h2>`;\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl +=\n                    '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                    '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl += `<li><a class=\"action-button use-target\" target=\"${action.target}\" href=\"${\n                    action.url_args\n                }\" onclick=\"return false;\" >${action.label}</a></li>`;\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl +=\n                    '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                    '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += `<th id=\"${column.key}-header\">`;\n                if (column.href) {\n                    tmpl += `<a href=\"${column.href}\" class=\"sort-link\" sort_key=\"${column.key}\">${column.label}</a>`;\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl += `<span class=\"sort-arrow\">${column.extra}</span></th>`;\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = `grid-${i}-popup`;\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl += `<td style=\"width: 1.5em;\"><input type=\"checkbox\" name=\"id\" value=\"${encoded_id}\" id=\"${\n                    encoded_id\n                }\" class=\"grid-row-select-checkbox\" /></td>`;\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = `grid-${i}-popup`;\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += `<td ${nowrap}>`;\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl += `<div id=\"${id}\" class=\"${cls}\" style=\"float: left;\">`;\n                        }\n                        tmpl += `<a class=\"menubutton-label use-target\" target=\"${target}\" href=\"${\n                            link\n                        }\" onclick=\"return false;\">${value}</a>`;\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl += `<div id=\"${id}\" class=\"${cls}\"><label id=\"${column.label_id_prefix}${\n                            encoded_id\n                        }\" for=\"${encoded_id}\">${value || \"\"}</label></div>`;\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl += '<td colspan=\"100\">' + '<span id=\"page-link-container\">' + \"Page:\";\n\n            if (min_page > 1) {\n                tmpl +=\n                    '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                if (page_index == options.cur_page_num) {\n                    tmpl += `<span class=\"page-link inactive-link\" id=\"page-link-${page_index}\">${page_index}</span>`;\n                } else {\n                    tmpl += `<span class=\"page-link\" id=\"page-link-${\n                        page_index\n                    }\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"${page_index}\">${\n                        page_index\n                    }</a></span>`;\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl += `...<span class=\"page-link\" id=\"page-link-${\n                    num_pages\n                }\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"${num_pages}\">${\n                    num_pages\n                }</a></span>`;\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl +=\n                '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl +=\n                \"<tr>\" +\n                '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                \"<td></td>\" +\n                '<td colspan=\"100\">' +\n                'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl += `<input type=\"button\" value=\"${\n                        operation.label\n                    }\" class=\"operation-button action-button\">&nbsp;`;\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl += `<a class=\"action-button\" href=\"${operation.global_operation}\">${operation.label}</a>`;\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl += `<tr><td colspan=\"100\">${options.legend}</td></tr>`;\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function(options) {\n        var status = options.status;\n        if ([\"success\", \"ok\"].indexOf(status) != -1) {\n            status = \"done\";\n        }\n        return `<p><div class=\"${status}message transient-message\">${_.escape(\n            options.message\n        )}</div><div style=\"clear: both\"></div></p>`;\n    },\n\n    // template\n    grid_filters: function(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl = `<div id=\"standard-search\" style=\"display: ${\n            standard_search_display\n        };\"><table><tr><td style=\"padding: 0;\"><table>`;\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl += '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl += `<div id=\"advanced-search\" style=\"display: ${\n            advanced_search_display\n        }; margin-top: 5px; border: 1px solid #ccc;\"><table><tr><td style=\"text-align: left\" colspan=\"100\"><a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a></td></tr>`;\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl += `<td align=\"left\" style=\"padding-left: 10px\">${column_label}:</td>`;\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl += `<form class=\"text-filter-form\" column_key=\"${column_key}\" action=\"${options.url}\" method=\"get\" >`;\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl += `<input type=\"hidden\" id=\"${temp_column.key}\" name=\"f-${temp_column.key}\" value=\"${\n                            filter_value\n                        }\"/>`;\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += `<span id=\"${column_key}-filtering-criteria\">`;\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl += `<span class=\"search-box\"><input class=\"search-box-input\" id=\"input-${column_key}-filter\" name=\"f-${\n                column_key\n            }\" type=\"text\" placeholder=\"${value}\" size=\"${\n                size\n            }\"/><button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\"><i class=\"fa fa-search\"></i></button></span></form>`;\n        } else {\n            // filter criteria\n            tmpl += `<span id=\"${column_key}-filtering-criteria\">`;\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl += `<span class=\"categorical-filter ${column_key}-filter current-filter\">${cf_label}</span>`;\n                } else {\n                    tmpl += `<span class=\"categorical-filter ${\n                        column_key\n                    }-filter\"><a href=\"javascript:void(0);\" filter_key=\"${cf_key}\" filter_val=\"${cf_arg}\">${\n                        cf_label\n                    }</a></span>`;\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function(filter_key, filter_value) {\n        filter_value = Utils.sanitize(filter_value);\n        return `<span class=\"text-filter-val\">${filter_value}<a href=\"javascript:void(0);\" filter_key=\"${\n            filter_key\n        }\" filter_val=\"${\n            filter_value\n        }\"><i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/></a></span>`;\n    }\n};\n"]}